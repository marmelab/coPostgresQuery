export default function (tableName, exposedFields, searchableFields, sortableFields, idOptions, extraOptions) {
    idOptions = idOptions || {};
    var idFieldName = idOptions.name || 'id';
    var idAutoGenerated = !!idOptions.autogenerated;

    extraOptions = extraOptions || {};
    var historyTable = extraOptions.historyTable;
    var watchedFields = extraOptions.watchedFields || exposedFields;

    searchableFields = searchableFields || exposedFields;
    sortableFields = sortableFields || exposedFields;

    var select = require('./select')(tableName, exposedFields, idFieldName);

    var selectPage = require('./selectPage')(tableName, exposedFields, searchableFields, sortableFields, idOptions, extraOptions);

    var version = historyTable ? require('./version')(tableName, historyTable, exposedFields, idFieldName, idAutoGenerated) : null;

    var batchInsert = require('./batchInsert')(tableName, exposedFields, idFieldName, idAutoGenerated, version);

    var batchUpdate = require('./batchUpdate')(tableName, exposedFields, idFieldName);

    var batchDelete = require('./batchDelete')(tableName, exposedFields, idFieldName);

    var insertOne = require('./insertOne')(tableName, exposedFields, idAutoGenerated, idFieldName, version);

    var hasChange = require('./hasChange')(select, watchedFields);

    var updateOne = require('./updateOne')(tableName, exposedFields, idFieldName, idAutoGenerated, version, hasChange);

    var removeOne = require('./removeOne')(tableName, exposedFields, idFieldName, version);

    function* exists(entityId) {
        var result = yield client.query('SELECT EXISTS(SELECT 1 FROM ' + tableName + ' WHERE ' + idFieldName + ' = $id)', {id: entityId});

        return result[0].exists;
    }

    return function (client) {

        return {
            selectAll: select.selectAll,
            selectOne: select.selectOneById,
            selectOneById: select.selectOneById,
            selectPage: selectPage,
            countAll: select.countAll,
            batchDelete: batchDelete,
            batchInsert: batchInsert,
            batchUpdate: batchUpdate,
            insertOne: insertOne,
            updateOne: updateOne,
            removeOne: removeOne,
            exists: exists,
            refresh: select.refresh,
            version: version,
            hasChange: hasChange
        };
    };
};

'use strict';

module.exports = function (client, tableName, fields, idFieldName, idAutoGenerated, version, hasChange, returningFields = fields) {
    return function* updateOne(id, data) {
        if (!id) {
            throw new Error('No id specified for updating ' + tableName + ' entity.');
        }

        var setQuery = [];
        var parameters = {};
        parameters[idFieldName] = id;

        fields.forEach(function (field) {
            if (idAutoGenerated && field === 'id') return;
            if (typeof data[field] === 'undefined') return;
            setQuery.push(field + '=$' + field);
            parameters[field] = data[field];
        });
        if (parameters.length === 1) {
            throw new Error('no valid column to set');
        }

        var shouldTriggerNewVersion = false;
        if (version && (yield hasChange(parameters)) === true) {
            shouldTriggerNewVersion = true;
        }

        var sql = 'UPDATE ' + tableName + ' SET ' + setQuery.join(', ') + ' WHERE ' + idFieldName + ' = $' + idFieldName + ' RETURNING ' + returningFields.join(', ');
        var entity = yield client.query({ sql, parameters })[0];
        if (!entity) {
            throw new Error('not found');
        }

        if (version) {
            yield version(entity, 'update', shouldTriggerNewVersion);
        }

        return entity;
    };
};
